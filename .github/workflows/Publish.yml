on:
  workflow_call:
    inputs:
      cwd:
        type: string
        required: false
    secrets:
      RELEASE_TOKEN:
        required: true

jobs:
  version:
    name: Get Version
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.version.outputs.tag }}
      name: ${{ steps.version.outputs.name }}
      body: ${{ steps.version.outputs.body }}
      isnew: ${{ steps.version.outputs.isnew }}
      ispre: ${{ steps.version.outputs.ispre }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Get Version
        id: version
        uses: bp3d-actions/cargo-release@main
        with:
          mode: get
          token: ${{ secrets.GITHUB_TOKEN }}
          cwd: ${{ inputs.cwd }}

  create-release:
    name: Create Release
    needs: version
    if: needs.version.outputs.isnew == 'true' && needs.version.outputs.ispre == 'false'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
      - name: Setup cargo
        run: cargo login ${{ secrets.RELEASE_TOKEN }}
      - name: Publish
        uses: bp3d-actions/cargo-release@main
        with:
          mode: publish
          token: ${{ secrets.GITHUB_TOKEN }}
          cwd: ${{ inputs.cwd }}
      - name: Create
        uses: ncipollo/release-action@main
        with:
          tag: ${{ needs.version.outputs.tag }}
          commit: ${{ github.ref }}
          prerelease: false
          name: ${{ needs.version.outputs.name }}
          body: ${{ needs.version.outputs.body }}
